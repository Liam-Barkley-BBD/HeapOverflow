name: Flyway Migrate 

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'migrations/**'

jobs:
  migrate:
    runs-on: ubuntu-latest
    env:
      TF_VAR_db_username: ${{ vars.DB_USERNAME }}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: af-south-1

      - name: Get Terraform Outputs
        uses: dflook/terraform-output@v1
        id: tf-outputs
        with:
          path: terraform

      - run: "# DB Endpoint: ${{ steps.tf-outputs.outputs.heapoverflow_db_endpoint }}"

      - name: Install PostgreSQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Create Database (if not exists)
        run: |
          psql -h "${{ steps.tf-outputs.outputs.heapoverflow_db_address }}" -p "${{ steps.tf-outputs.outputs.heapoverflow_db_port }}" -U "${{ vars.DB_USERNAME }}" -d postgres -c "SELECT 1 FROM pg_database WHERE datname='heapoverflow_db'" | grep -q 1 || psql -h "${{ steps.tf-outputs.outputs.heapoverflow_db_address }}" -p "${{ steps.tf-outputs.outputs.heapoverflow_db_port }}" -U "${{ vars.DB_USERNAME }}" -d postgres -c "CREATE DATABASE heapoverflow_db;"
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Flyway validate and migrate
        uses: joshuaavalon/flyway-action@v3.0.0
        with:
          url: jdbc:postgresql://${{ steps.tf-outputs.outputs.heapoverflow_db_endpoint }}/heapoverflow_db
          user: ${{ vars.DB_USERNAME }}
          password: ${{ secrets.DB_PASSWORD }}
          locations: filesystem:./migrations
        env:
          FLYWAY_VALIDATE_MIGRATION_NAMING: true
